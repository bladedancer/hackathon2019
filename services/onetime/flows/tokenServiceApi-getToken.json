{
	"schemaVersion": "4",
	"info": {
		"name": "tokenServiceApi - get /token"
	},
	"parameter": {
		"properties": {
			"params": {
				"type": "object",
				"description": "The parameters from the endpoint."
			},
			"request": {
				"type": "object",
				"description": "The HTTP request."
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false,
		"required": [
			"params",
			"request",
			"config",
			"env"
		]
	},
	"start": "doT.1",
	"nodes": {
		"speakeasy.1": {
			"type": "nodehandler://api-builder-plugin-fn-speakeasy-node/speakeasy",
			"name": "Generate Token",
			"method": "token",
			"parameters": [
				{
					"name": "secret",
					"type": "jsonpath",
					"value": "$.users[0].secret.base32",
					"metaName": "secret",
					"metaDescription": "Base32 encoded secret."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"http.1"
					],
					"context": "$.token",
					"metaName": "Next"
				}
			},
			"metaMethod": "Generate Token"
		},
		"http.1": {
			"type": "nodehandler://axway-flow/http",
			"name": "Success",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "200",
					"metaName": "status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.token",
					"metaName": "body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"RegisteredUsers.1": {
			"type": "nodehandler://api-builder-flow-invoke/model/RegisteredUsers",
			"name": "Query",
			"method": "query",
			"parameters": [
				{
					"name": "where",
					"type": "jsonpath",
					"value": "$.where",
					"metaName": "where",
					"metaDescription": "JSON-encoded object specifying field constraints. The field name is the key and the value is the constraint statement or value."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"condition.1"
					],
					"context": "$.users",
					"metaName": "Next"
				}
			},
			"metaMethod": "Query"
		},
		"doT.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-dot/doT",
			"name": "Where",
			"method": "formatStr",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$.params",
					"metaName": "data",
					"metaDescription": "The data to evaluate the template with. Use $ to access the entire context."
				},
				{
					"name": "template",
					"type": "string",
					"value": "\"{\\n\\\"name\\\": {{=JSON.stringify(it['x-user'])}}\\n}\"",
					"metaName": "template",
					"metaDescription": "The doT template."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"RegisteredUsers.1"
					],
					"context": "$.where",
					"metaName": "Next"
				},
				"error": {
					"routes": [
						"http.2"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Format string"
		},
		"http.2": {
			"type": "nodehandler://axway-flow/http",
			"name": "Unexpected Error",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "201",
					"metaName": "status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.error.message",
					"metaName": "body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"condition.1": {
			"type": "nodehandler://axway-flow/condition",
			"name": "Exists",
			"method": "exists",
			"parameters": [
				{
					"name": "source",
					"type": "jsonpath",
					"value": "$.users[0]",
					"metaName": "source",
					"metaDescription": "The input to test."
				}
			],
			"outputs": {
				"true": {
					"routes": [
						"speakeasy.1"
					],
					"context": "$.exists",
					"metaName": "True"
				},
				"false": {
					"routes": [
						"http.3"
					],
					"context": "$.exists",
					"metaName": "False"
				}
			},
			"metaMethod": "Exists"
		},
		"http.3": {
			"type": "nodehandler://axway-flow/http",
			"name": "Not Found",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "404",
					"metaName": "status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.params['x-user']",
					"metaName": "body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		}
	}
}